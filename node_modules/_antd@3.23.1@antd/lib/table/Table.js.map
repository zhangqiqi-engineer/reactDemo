{"version":3,"sources":["table/Table.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","noop","stopPropagation","nativeEvent","stopImmediatePropagation","getRowSelection","props","rowSelection","getColumnKey","column","index","key","dataIndex","isSameColumn","a","b","value","other","toString","defaultPagination","onChange","onShowSizeChange","emptyObject","Table","getCheckboxPropsByItem","item","getCheckboxProps","getRecordKey","CheckboxPropsCache","checkboxProps","record","rowKey","recordKey","undefined","onRow","prefixCls","custom","store","generatePopupContainerFunc","getPopupContainer","scroll","ReactDOM","findDOMNode","handleFilter","nextFilters","pagination","state","filters","currentColumnKeys","columns","c","children","push","keys","forEach","columnKey","current","newState","filtersToSetState","getFilteredValueColumns","col","setState","selectionDirty","apply","prepareParamsArguments","handleSelect","rowIndex","checked","target","defaultSelection","getState","getDefaultSelection","selectedRowKeys","concat","pivot","rows","getFlatCurrentPageData","realIndex","expandedRowRender","findIndex","row","shiftKey","changeRowKeys","direction","Math","sign","dist","abs","step","disabled","includes","filter","j","setSelectedRowKeys","selectWay","handleRadioSelect","handleSelectRow","selectionKey","onSelectFunc","data","changeableRowKeys","map","splice","customSelectionStartIndex","hideDefaultSelections","handlePageChange","otherArguments","handleShowSizeChange","pageSize","nextPagination","renderExpandIcon","expandable","expanded","needIndentSpaced","onExpand","defaultLocale","locale","event","collapse","expand","renderSelectionBox","type","_","handleChange","renderTable","renderEmpty","dropdownPrefixCls","contextLocale","contextGetPopupContainer","_a","showHeader","restTableProps","restProps","getCurrentPageData","expandIconAsCell","realGetPopupContainer","mergedLocale","emptyText","classString","size","bordered","columnsWithRowSelection","renderRowSelection","renderColumnsDropdown","newColumn","expandIconColumnIndex","components","renderComponent","getPrefixCls","customizePrefixCls","customizeDropdownPrefixCls","style","className","loading","spinning","table","paginationPatchClass","hasPagination","renderPagination","some","fixed","createComponents","getDefaultSortOrder","getFiltersFromColumns","getDefaultPagination","nextProps","previousState","newPagination","dataSource","getSortOrderColumns","sortState","getSortStateFromColumns","sortColumn","sortOrder","filteredValueColumns","filtersFromColumns","newFilters","isFiltersChanged","getFlatData","defaultChecked","defaultCurrent","defaultPageSize","filteredValue","colKey","definedSortState","defaultSortedColumn","defaultSortOrder","sortedColumn","total","floor","sorter","result","getLocalData","Number","MAX_VALUE","getMaxCurrent","childrenColumnName","currentState","slice","sorterFn","getSorterFn","recursiveSort","findColumn","values","onFilter","v","selectionInfo","selectedRows","onSelect","onSelectMultiple","changeRows","onSelectAll","onSelectInvert","sortDirections","newSortOrder","methodIndex","filtersChanged","order","field","extra","currentDataSource","myKey","prevComponents","bodyRow","body","preBodyRow","sort","paginationPosition","position","selectionColumnClass","selections","selectionColumn","render","width","columnWidth","title","columnTitle","INTERNAL_COL_DEFINE","checkboxAllDisabled","every","unshift","filterDropdown","sortButton","onHeaderCell","isSortColumn","colFilters","isAscend","isDescend","ascend","descend","sortTitle","colProps","onHeaderCellClick","onClick","toggleSortOrder","renderColumnTitle","Function","React","Component","Column","ColumnGroup","propTypes","PropTypes","array","string","useFixedHeader","bool","object","oneOfType","func","defaultProps","indentSize"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable prefer-spread */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport omit from 'omit.js';\nimport RcTable, { INTERNAL_COL_DEFINE } from 'rc-table';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport FilterDropdown from './filterDropdown';\nimport createStore from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport createBodyRow from './createBodyRow';\nimport { flatArray, treeMap, flatFilter, normalizeColumns } from './util';\nimport Pagination from '../pagination';\nimport Icon from '../icon';\nimport Spin from '../spin';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nfunction noop() { }\nfunction stopPropagation(e) {\n    e.stopPropagation();\n    if (e.nativeEvent.stopImmediatePropagation) {\n        e.nativeEvent.stopImmediatePropagation();\n    }\n}\nfunction getRowSelection(props) {\n    return props.rowSelection || {};\n}\nfunction getColumnKey(column, index) {\n    return column.key || column.dataIndex || index;\n}\nfunction isSameColumn(a, b) {\n    if (a && b && a.key && a.key === b.key) {\n        return true;\n    }\n    return (a === b ||\n        shallowEqual(a, b, (value, other) => {\n            if (typeof value === 'function' && typeof other === 'function') {\n                return value === other || value.toString() === other.toString();\n            }\n        }));\n}\nconst defaultPagination = {\n    onChange: noop,\n    onShowSizeChange: noop,\n};\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\nconst emptyObject = {};\nexport default class Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getCheckboxPropsByItem = (item, index) => {\n            const rowSelection = getRowSelection(this.props);\n            if (!rowSelection.getCheckboxProps) {\n                return {};\n            }\n            const key = this.getRecordKey(item, index);\n            // Cache checkboxProps\n            if (!this.CheckboxPropsCache[key]) {\n                this.CheckboxPropsCache[key] = rowSelection.getCheckboxProps(item) || {};\n                const checkboxProps = this.CheckboxPropsCache[key];\n                warning(!('checked' in checkboxProps) && !('defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n            }\n            return this.CheckboxPropsCache[key];\n        };\n        this.getRecordKey = (record, index) => {\n            const { rowKey } = this.props;\n            const recordKey = typeof rowKey === 'function' ? rowKey(record, index) : record[rowKey];\n            warning(recordKey !== undefined, 'Table', 'Each record in dataSource of table should have a unique `key` prop, ' +\n                'or set `rowKey` of Table to an unique primary key, ' +\n                'see https://u.ant.design/table-row-key');\n            return recordKey === undefined ? index : recordKey;\n        };\n        this.onRow = (prefixCls, record, index) => {\n            const { onRow } = this.props;\n            const custom = onRow ? onRow(record, index) : {};\n            return Object.assign(Object.assign({}, custom), { prefixCls, store: this.store, rowKey: this.getRecordKey(record, index) });\n        };\n        this.generatePopupContainerFunc = (getPopupContainer) => {\n            const { scroll } = this.props;\n            if (getPopupContainer) {\n                return getPopupContainer;\n            }\n            // Use undefined to let rc component use default logic.\n            return scroll ? () => ReactDOM.findDOMNode(this) : undefined;\n        };\n        this.handleFilter = (column, nextFilters) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            const filters = Object.assign(Object.assign({}, this.state.filters), { [getColumnKey(column)]: nextFilters });\n            // Remove filters not in current columns\n            const currentColumnKeys = [];\n            treeMap(this.columns, c => {\n                if (!c.children) {\n                    currentColumnKeys.push(getColumnKey(c));\n                }\n            });\n            Object.keys(filters).forEach(columnKey => {\n                if (currentColumnKeys.indexOf(columnKey) < 0) {\n                    delete filters[columnKey];\n                }\n            });\n            if (props.pagination) {\n                // Reset current prop\n                pagination.current = 1;\n                pagination.onChange(pagination.current);\n            }\n            const newState = {\n                pagination,\n                filters: {},\n            };\n            const filtersToSetState = Object.assign({}, filters);\n            // Remove filters which is controlled\n            this.getFilteredValueColumns().forEach((col) => {\n                const columnKey = getColumnKey(col);\n                if (columnKey) {\n                    delete filtersToSetState[columnKey];\n                }\n            });\n            if (Object.keys(filtersToSetState).length > 0) {\n                newState.filters = filtersToSetState;\n            }\n            // Controlled current prop will not respond user interaction\n            if (typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState, () => {\n                this.store.setState({\n                    selectionDirty: false,\n                });\n                const { onChange } = this.props;\n                if (onChange) {\n                    onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, filters,\n                        pagination })));\n                }\n            });\n        };\n        this.handleSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            let selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            const key = this.getRecordKey(record, rowIndex);\n            const { pivot } = this.state;\n            const rows = this.getFlatCurrentPageData();\n            let realIndex = rowIndex;\n            if (this.props.expandedRowRender) {\n                realIndex = rows.findIndex(row => this.getRecordKey(row, rowIndex) === key);\n            }\n            if (nativeEvent.shiftKey && pivot !== undefined && realIndex !== pivot) {\n                const changeRowKeys = [];\n                const direction = Math.sign(pivot - realIndex);\n                const dist = Math.abs(pivot - realIndex);\n                let step = 0;\n                while (step <= dist) {\n                    const i = realIndex + step * direction;\n                    step += 1;\n                    const row = rows[i];\n                    const rowKey = this.getRecordKey(row, i);\n                    const checkboxProps = this.getCheckboxPropsByItem(row, i);\n                    if (!checkboxProps.disabled) {\n                        if (selectedRowKeys.includes(rowKey)) {\n                            if (!checked) {\n                                selectedRowKeys = selectedRowKeys.filter((j) => rowKey !== j);\n                                changeRowKeys.push(rowKey);\n                            }\n                        }\n                        else if (checked) {\n                            selectedRowKeys.push(rowKey);\n                            changeRowKeys.push(rowKey);\n                        }\n                    }\n                }\n                this.setState({ pivot: realIndex });\n                this.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelectMultiple',\n                    record,\n                    checked,\n                    changeRowKeys,\n                    nativeEvent,\n                });\n            }\n            else {\n                if (checked) {\n                    selectedRowKeys.push(this.getRecordKey(record, realIndex));\n                }\n                else {\n                    selectedRowKeys = selectedRowKeys.filter((i) => key !== i);\n                }\n                this.setState({ pivot: realIndex });\n                this.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelect',\n                    record,\n                    checked,\n                    changeRowKeys: undefined,\n                    nativeEvent,\n                });\n            }\n        };\n        this.handleRadioSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const key = this.getRecordKey(record, rowIndex);\n            const selectedRowKeys = [key];\n            this.store.setState({\n                selectionDirty: true,\n            });\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay: 'onSelect',\n                record,\n                checked,\n                changeRowKeys: undefined,\n                nativeEvent,\n            });\n        };\n        this.handleSelectRow = (selectionKey, index, onSelectFunc) => {\n            const data = this.getFlatCurrentPageData();\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            const selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            const changeableRowKeys = data\n                .filter((item, i) => !this.getCheckboxPropsByItem(item, i).disabled)\n                .map((item, i) => this.getRecordKey(item, i));\n            const changeRowKeys = [];\n            let selectWay = 'onSelectAll';\n            let checked;\n            // handle default selection\n            switch (selectionKey) {\n                case 'all':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = true;\n                    break;\n                case 'removeAll':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) >= 0) {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = false;\n                    break;\n                case 'invert':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                        }\n                        else {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                        }\n                        changeRowKeys.push(key);\n                        selectWay = 'onSelectInvert';\n                    });\n                    break;\n                default:\n                    break;\n            }\n            this.store.setState({\n                selectionDirty: true,\n            });\n            // when select custom selection, callback selections[n].onSelect\n            const { rowSelection } = this.props;\n            let customSelectionStartIndex = 2;\n            if (rowSelection && rowSelection.hideDefaultSelections) {\n                customSelectionStartIndex = 0;\n            }\n            if (index >= customSelectionStartIndex && typeof onSelectFunc === 'function') {\n                return onSelectFunc(changeableRowKeys);\n            }\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay,\n                checked,\n                changeRowKeys,\n            });\n        };\n        this.handlePageChange = (current, ...otherArguments) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            if (current) {\n                pagination.current = current;\n            }\n            else {\n                pagination.current = pagination.current || 1;\n            }\n            pagination.onChange(pagination.current, ...otherArguments);\n            const newState = {\n                pagination,\n            };\n            // Controlled current prop will not respond user interaction\n            if (props.pagination && typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState);\n            this.store.setState({\n                selectionDirty: false,\n            });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, pagination })));\n            }\n        };\n        this.handleShowSizeChange = (current, pageSize) => {\n            const { pagination } = this.state;\n            pagination.onShowSizeChange(current, pageSize);\n            const nextPagination = Object.assign(Object.assign({}, pagination), { pageSize,\n                current });\n            this.setState({ pagination: nextPagination });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { pagination: nextPagination })));\n            }\n        };\n        this.renderExpandIcon = (prefixCls) => ({ expandable, expanded, needIndentSpaced, record, onExpand, }) => {\n            if (expandable) {\n                return (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n          {(locale) => (<TransButton className={classNames(`${prefixCls}-row-expand-icon`, {\n                    [`${prefixCls}-row-collapsed`]: !expanded,\n                    [`${prefixCls}-row-expanded`]: expanded,\n                })} onClick={event => {\n                    onExpand(record, event);\n                }} aria-label={expanded ? locale.collapse : locale.expand} noStyle/>)}\n        </LocaleReceiver>);\n            }\n            if (needIndentSpaced) {\n                return <span className={`${prefixCls}-row-expand-icon ${prefixCls}-row-spaced`}/>;\n            }\n            return null;\n        };\n        this.renderSelectionBox = (type) => {\n            return (_, record, index) => {\n                const rowKey = this.getRecordKey(record, index);\n                const props = this.getCheckboxPropsByItem(record, index);\n                const handleChange = (e) => type === 'radio'\n                    ? this.handleRadioSelect(record, index, e)\n                    : this.handleSelect(record, index, e);\n                return (<span onClick={stopPropagation}>\n          <SelectionBox type={type} store={this.store} rowIndex={rowKey} onChange={handleChange} defaultSelection={this.getDefaultSelection()} {...props}/>\n        </span>);\n            };\n        };\n        this.renderTable = ({ prefixCls, renderEmpty, dropdownPrefixCls, contextLocale, getPopupContainer: contextGetPopupContainer, }) => {\n            const _a = this.props, { showHeader, locale, getPopupContainer } = _a, restTableProps = __rest(_a, [\"showHeader\", \"locale\", \"getPopupContainer\"]);\n            // do not pass prop.style to rc-table, since already apply it to container div\n            const restProps = omit(restTableProps, ['style']);\n            const data = this.getCurrentPageData();\n            const expandIconAsCell = this.props.expandedRowRender && this.props.expandIconAsCell !== false;\n            // use props.getPopupContainer first\n            const realGetPopupContainer = getPopupContainer || contextGetPopupContainer;\n            // Merge too locales\n            const mergedLocale = Object.assign(Object.assign({}, contextLocale), locale);\n            if (!locale || !locale.emptyText) {\n                mergedLocale.emptyText = renderEmpty('Table');\n            }\n            const classString = classNames({\n                [`${prefixCls}-${this.props.size}`]: true,\n                [`${prefixCls}-bordered`]: this.props.bordered,\n                [`${prefixCls}-empty`]: !data.length,\n                [`${prefixCls}-without-column-header`]: !showHeader,\n            });\n            const columnsWithRowSelection = this.renderRowSelection({\n                prefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            });\n            const columns = this.renderColumnsDropdown({\n                columns: columnsWithRowSelection,\n                prefixCls,\n                dropdownPrefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            }).map((column, i) => {\n                const newColumn = Object.assign({}, column);\n                newColumn.key = getColumnKey(newColumn, i);\n                return newColumn;\n            });\n            let expandIconColumnIndex = columns[0] && columns[0].key === 'selection-column' ? 1 : 0;\n            if ('expandIconColumnIndex' in restProps) {\n                expandIconColumnIndex = restProps.expandIconColumnIndex;\n            }\n            return (<RcTable key=\"table\" expandIcon={this.renderExpandIcon(prefixCls)} {...restProps} onRow={(record, index) => this.onRow(prefixCls, record, index)} components={this.components} prefixCls={prefixCls} data={data} columns={columns} showHeader={showHeader} className={classString} expandIconColumnIndex={expandIconColumnIndex} expandIconAsCell={expandIconAsCell} emptyText={mergedLocale.emptyText}/>);\n        };\n        this.renderComponent = ({ getPrefixCls, renderEmpty, getPopupContainer }) => {\n            const { prefixCls: customizePrefixCls, dropdownPrefixCls: customizeDropdownPrefixCls, style, className, } = this.props;\n            const data = this.getCurrentPageData();\n            let loading = this.props.loading;\n            if (typeof loading === 'boolean') {\n                loading = {\n                    spinning: loading,\n                };\n            }\n            const prefixCls = getPrefixCls('table', customizePrefixCls);\n            const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n            const table = (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n        {locale => this.renderTable({\n                prefixCls,\n                renderEmpty,\n                dropdownPrefixCls,\n                contextLocale: locale,\n                getPopupContainer,\n            })}\n      </LocaleReceiver>);\n            // if there is no pagination or no data,\n            // the height of spin should decrease by half of pagination\n            const paginationPatchClass = this.hasPagination() && data && data.length !== 0\n                ? `${prefixCls}-with-pagination`\n                : `${prefixCls}-without-pagination`;\n            return (<div className={classNames(`${prefixCls}-wrapper`, className)} style={style}>\n        <Spin {...loading} className={loading.spinning ? `${paginationPatchClass} ${prefixCls}-spin-holder` : ''}>\n          {this.renderPagination(prefixCls, 'top')}\n          {table}\n          {this.renderPagination(prefixCls, 'bottom')}\n        </Spin>\n      </div>);\n        };\n        const { expandedRowRender, columns = [] } = props;\n        warning(!('columnsPageRange' in props || 'columnsPageSize' in props), 'Table', '`columnsPageRange` and `columnsPageSize` are removed, please use ' +\n            'fixed columns instead, see: https://u.ant.design/fixed-columns.');\n        if (expandedRowRender && columns.some(({ fixed }) => !!fixed)) {\n            warning(false, 'Table', '`expandedRowRender` and `Column.fixed` are not compatible. Please use one of them at one time.');\n        }\n        this.columns = props.columns || normalizeColumns(props.children);\n        this.createComponents(props.components);\n        this.state = Object.assign(Object.assign({}, this.getDefaultSortOrder(this.columns)), { \n            // 减少状态\n            filters: this.getFiltersFromColumns(), pagination: this.getDefaultPagination(props), pivot: undefined });\n        this.CheckboxPropsCache = {};\n        this.store = createStore({\n            selectedRowKeys: getRowSelection(props).selectedRowKeys || [],\n            selectionDirty: false,\n        });\n    }\n    componentWillReceiveProps(nextProps) {\n        this.columns = nextProps.columns || normalizeColumns(nextProps.children);\n        if ('pagination' in nextProps || 'pagination' in this.props) {\n            this.setState(previousState => {\n                const newPagination = Object.assign(Object.assign(Object.assign({}, defaultPagination), previousState.pagination), nextProps.pagination);\n                newPagination.current = newPagination.current || 1;\n                newPagination.pageSize = newPagination.pageSize || 10;\n                return { pagination: nextProps.pagination !== false ? newPagination : emptyObject };\n            });\n        }\n        if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {\n            this.store.setState({\n                selectedRowKeys: nextProps.rowSelection.selectedRowKeys || [],\n            });\n        }\n        else if (this.props.rowSelection && !nextProps.rowSelection) {\n            this.store.setState({\n                selectedRowKeys: [],\n            });\n        }\n        if ('dataSource' in nextProps && nextProps.dataSource !== this.props.dataSource) {\n            this.store.setState({\n                selectionDirty: false,\n            });\n        }\n        // https://github.com/ant-design/ant-design/issues/10133\n        this.CheckboxPropsCache = {};\n        if (this.getSortOrderColumns(this.columns).length > 0) {\n            const sortState = this.getSortStateFromColumns(this.columns);\n            if (sortState.sortColumn !== this.state.sortColumn ||\n                sortState.sortOrder !== this.state.sortOrder) {\n                this.setState(sortState);\n            }\n        }\n        const filteredValueColumns = this.getFilteredValueColumns(this.columns);\n        if (filteredValueColumns.length > 0) {\n            const filtersFromColumns = this.getFiltersFromColumns(this.columns);\n            const newFilters = Object.assign({}, this.state.filters);\n            Object.keys(filtersFromColumns).forEach(key => {\n                newFilters[key] = filtersFromColumns[key];\n            });\n            if (this.isFiltersChanged(newFilters)) {\n                this.setState({ filters: newFilters });\n            }\n        }\n        this.createComponents(nextProps.components, this.props.components);\n    }\n    getDefaultSelection() {\n        const rowSelection = getRowSelection(this.props);\n        if (!rowSelection.getCheckboxProps) {\n            return [];\n        }\n        return this.getFlatData()\n            .filter((item, rowIndex) => this.getCheckboxPropsByItem(item, rowIndex).defaultChecked)\n            .map((record, rowIndex) => this.getRecordKey(record, rowIndex));\n    }\n    getDefaultPagination(props) {\n        const pagination = typeof props.pagination === 'object' ? props.pagination : {};\n        let current;\n        if ('current' in pagination) {\n            current = pagination.current;\n        }\n        else if ('defaultCurrent' in pagination) {\n            current = pagination.defaultCurrent;\n        }\n        let pageSize;\n        if ('pageSize' in pagination) {\n            pageSize = pagination.pageSize;\n        }\n        else if ('defaultPageSize' in pagination) {\n            pageSize = pagination.defaultPageSize;\n        }\n        return this.hasPagination(props)\n            ? Object.assign(Object.assign(Object.assign({}, defaultPagination), pagination), { current: current || 1, pageSize: pageSize || 10 }) : {};\n    }\n    getSortOrderColumns(columns) {\n        return flatFilter(columns || this.columns || [], (column) => 'sortOrder' in column);\n    }\n    getFilteredValueColumns(columns) {\n        return flatFilter(columns || this.columns || [], (column) => typeof column.filteredValue !== 'undefined');\n    }\n    getFiltersFromColumns(columns) {\n        const filters = {};\n        this.getFilteredValueColumns(columns).forEach((col) => {\n            const colKey = getColumnKey(col);\n            filters[colKey] = col.filteredValue;\n        });\n        return filters;\n    }\n    getDefaultSortOrder(columns) {\n        const definedSortState = this.getSortStateFromColumns(columns);\n        const defaultSortedColumn = flatFilter(columns || [], (column) => column.defaultSortOrder != null)[0];\n        if (defaultSortedColumn && !definedSortState.sortColumn) {\n            return {\n                sortColumn: defaultSortedColumn,\n                sortOrder: defaultSortedColumn.defaultSortOrder,\n            };\n        }\n        return definedSortState;\n    }\n    getSortStateFromColumns(columns) {\n        // return first column which sortOrder is not falsy\n        const sortedColumn = this.getSortOrderColumns(columns).filter((col) => col.sortOrder)[0];\n        if (sortedColumn) {\n            return {\n                sortColumn: sortedColumn,\n                sortOrder: sortedColumn.sortOrder,\n            };\n        }\n        return {\n            sortColumn: null,\n            sortOrder: null,\n        };\n    }\n    getMaxCurrent(total) {\n        const { pagination: { current, pageSize }, } = this.state;\n        if ((current - 1) * pageSize >= total) {\n            return Math.floor((total - 1) / pageSize) + 1;\n        }\n        return current;\n    }\n    getSorterFn(state) {\n        const { sortOrder, sortColumn } = state || this.state;\n        if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {\n            return;\n        }\n        return (a, b) => {\n            const result = sortColumn.sorter(a, b, sortOrder);\n            if (result !== 0) {\n                return sortOrder === 'descend' ? -result : result;\n            }\n            return 0;\n        };\n    }\n    getCurrentPageData() {\n        let data = this.getLocalData();\n        let current;\n        let pageSize;\n        const state = this.state;\n        // 如果没有分页的话，默认全部展示\n        if (!this.hasPagination()) {\n            pageSize = Number.MAX_VALUE;\n            current = 1;\n        }\n        else {\n            pageSize = state.pagination.pageSize;\n            current = this.getMaxCurrent(state.pagination.total || data.length);\n        }\n        // 分页\n        // ---\n        // 当数据量少于等于每页数量时，直接设置数据\n        // 否则进行读取分页数据\n        if (data.length > pageSize || pageSize === Number.MAX_VALUE) {\n            data = data.filter((_, i) => {\n                return i >= (current - 1) * pageSize && i < current * pageSize;\n            });\n        }\n        return data;\n    }\n    getFlatData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getLocalData(null, false), childrenColumnName);\n    }\n    getFlatCurrentPageData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getCurrentPageData(), childrenColumnName);\n    }\n    getLocalData(state, filter = true) {\n        const currentState = state || this.state;\n        const { dataSource } = this.props;\n        let data = dataSource || [];\n        // 优化本地排序\n        data = data.slice(0);\n        const sorterFn = this.getSorterFn(currentState);\n        if (sorterFn) {\n            data = this.recursiveSort(data, sorterFn);\n        }\n        // 筛选\n        if (filter && currentState.filters) {\n            Object.keys(currentState.filters).forEach(columnKey => {\n                const col = this.findColumn(columnKey);\n                if (!col) {\n                    return;\n                }\n                const values = currentState.filters[columnKey] || [];\n                if (values.length === 0) {\n                    return;\n                }\n                const onFilter = col.onFilter;\n                data = onFilter\n                    ? data.filter(record => {\n                        return values.some(v => onFilter(v, record));\n                    })\n                    : data;\n            });\n        }\n        return data;\n    }\n    setSelectedRowKeys(selectedRowKeys, selectionInfo) {\n        const { selectWay, record, checked, changeRowKeys, nativeEvent } = selectionInfo;\n        const rowSelection = getRowSelection(this.props);\n        if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n            this.store.setState({ selectedRowKeys });\n        }\n        const data = this.getFlatData();\n        if (!rowSelection.onChange && !rowSelection[selectWay]) {\n            return;\n        }\n        const selectedRows = data.filter((row, i) => selectedRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n        if (rowSelection.onChange) {\n            rowSelection.onChange(selectedRowKeys, selectedRows);\n        }\n        if (selectWay === 'onSelect' && rowSelection.onSelect) {\n            rowSelection.onSelect(record, checked, selectedRows, nativeEvent);\n        }\n        else if (selectWay === 'onSelectMultiple' && rowSelection.onSelectMultiple) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectMultiple(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectAll(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n            rowSelection.onSelectInvert(selectedRowKeys);\n        }\n    }\n    toggleSortOrder(column) {\n        if (!column.sorter) {\n            return;\n        }\n        const pagination = Object.assign({}, this.state.pagination);\n        const sortDirections = column.sortDirections || this.props.sortDirections;\n        const { sortOrder, sortColumn } = this.state;\n        // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n        let newSortOrder;\n        // 切换另一列时，丢弃 sortOrder 的状态\n        if (isSameColumn(sortColumn, column) && sortOrder !== undefined) {\n            // 按照sortDirections的内容依次切换排序状态\n            const methodIndex = sortDirections.indexOf(sortOrder) + 1;\n            newSortOrder =\n                methodIndex === sortDirections.length ? undefined : sortDirections[methodIndex];\n        }\n        else {\n            newSortOrder = sortDirections[0];\n        }\n        if (this.props.pagination) {\n            // Reset current prop\n            pagination.current = 1;\n            pagination.onChange(pagination.current);\n        }\n        const newState = {\n            pagination,\n            sortOrder: newSortOrder,\n            sortColumn: newSortOrder ? column : null,\n        };\n        // Controlled\n        if (this.getSortOrderColumns().length === 0) {\n            this.setState(newState);\n        }\n        const { onChange } = this.props;\n        if (onChange) {\n            onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), newState)));\n        }\n    }\n    hasPagination(props) {\n        return (props || this.props).pagination !== false;\n    }\n    isFiltersChanged(filters) {\n        let filtersChanged = false;\n        if (Object.keys(filters).length !== Object.keys(this.state.filters).length) {\n            filtersChanged = true;\n        }\n        else {\n            Object.keys(filters).forEach(columnKey => {\n                if (filters[columnKey] !== this.state.filters[columnKey]) {\n                    filtersChanged = true;\n                }\n            });\n        }\n        return filtersChanged;\n    }\n    isSortColumn(column) {\n        const { sortColumn } = this.state;\n        if (!column || !sortColumn) {\n            return false;\n        }\n        return getColumnKey(sortColumn) === getColumnKey(column);\n    }\n    // Get pagination, filters, sorter\n    prepareParamsArguments(state) {\n        const pagination = Object.assign({}, state.pagination);\n        // remove useless handle function in Table.onChange\n        delete pagination.onChange;\n        delete pagination.onShowSizeChange;\n        const filters = state.filters;\n        const sorter = {};\n        if (state.sortColumn && state.sortOrder) {\n            sorter.column = state.sortColumn;\n            sorter.order = state.sortOrder;\n            sorter.field = state.sortColumn.dataIndex;\n            sorter.columnKey = getColumnKey(state.sortColumn);\n        }\n        const extra = {\n            currentDataSource: this.getLocalData(state),\n        };\n        return [pagination, filters, sorter, extra];\n    }\n    findColumn(myKey) {\n        let column;\n        treeMap(this.columns, c => {\n            if (getColumnKey(c) === myKey) {\n                column = c;\n            }\n        });\n        return column;\n    }\n    createComponents(components = {}, prevComponents) {\n        const bodyRow = components && components.body && components.body.row;\n        const preBodyRow = prevComponents && prevComponents.body && prevComponents.body.row;\n        if (!this.row || bodyRow !== preBodyRow) {\n            this.row = createBodyRow(bodyRow);\n        }\n        this.components = Object.assign(Object.assign({}, components), { body: Object.assign(Object.assign({}, components.body), { row: this.row }) });\n    }\n    recursiveSort(data, sorterFn) {\n        const { childrenColumnName = 'children' } = this.props;\n        return data.sort(sorterFn).map((item) => item[childrenColumnName]\n            ? Object.assign(Object.assign({}, item), { [childrenColumnName]: this.recursiveSort(item[childrenColumnName], sorterFn) }) : item);\n    }\n    renderPagination(prefixCls, paginationPosition) {\n        // 强制不需要分页\n        if (!this.hasPagination()) {\n            return null;\n        }\n        let size = 'default';\n        const { pagination } = this.state;\n        if (pagination.size) {\n            size = pagination.size;\n        }\n        else if (this.props.size === 'middle' || this.props.size === 'small') {\n            size = 'small';\n        }\n        const position = pagination.position || 'bottom';\n        const total = pagination.total || this.getLocalData().length;\n        return total > 0 && (position === paginationPosition || position === 'both') ? (<Pagination key={`pagination-${paginationPosition}`} {...pagination} className={classNames(pagination.className, `${prefixCls}-pagination`)} onChange={this.handlePageChange} total={total} size={size} current={this.getMaxCurrent(total)} onShowSizeChange={this.handleShowSizeChange}/>) : null;\n    }\n    renderRowSelection({ prefixCls, locale, getPopupContainer, }) {\n        const { rowSelection } = this.props;\n        const columns = this.columns.concat();\n        if (rowSelection) {\n            const data = this.getFlatCurrentPageData().filter((item, index) => {\n                if (rowSelection.getCheckboxProps) {\n                    return !this.getCheckboxPropsByItem(item, index).disabled;\n                }\n                return true;\n            });\n            const selectionColumnClass = classNames(`${prefixCls}-selection-column`, {\n                [`${prefixCls}-selection-column-custom`]: rowSelection.selections,\n            });\n            const selectionColumn = {\n                key: 'selection-column',\n                render: this.renderSelectionBox(rowSelection.type),\n                className: selectionColumnClass,\n                fixed: rowSelection.fixed,\n                width: rowSelection.columnWidth,\n                title: rowSelection.columnTitle,\n                [INTERNAL_COL_DEFINE]: {\n                    className: `${prefixCls}-selection-col`,\n                },\n            };\n            if (rowSelection.type !== 'radio') {\n                const checkboxAllDisabled = data.every((item, index) => this.getCheckboxPropsByItem(item, index).disabled);\n                selectionColumn.title = selectionColumn.title || (<SelectionCheckboxAll store={this.store} locale={locale} data={data} getCheckboxPropsByItem={this.getCheckboxPropsByItem} getRecordKey={this.getRecordKey} disabled={checkboxAllDisabled} prefixCls={prefixCls} onSelect={this.handleSelectRow} selections={rowSelection.selections} hideDefaultSelections={rowSelection.hideDefaultSelections} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)}/>);\n            }\n            if ('fixed' in rowSelection) {\n                selectionColumn.fixed = rowSelection.fixed;\n            }\n            else if (columns.some(column => column.fixed === 'left' || column.fixed === true)) {\n                selectionColumn.fixed = 'left';\n            }\n            if (columns[0] && columns[0].key === 'selection-column') {\n                columns[0] = selectionColumn;\n            }\n            else {\n                columns.unshift(selectionColumn);\n            }\n        }\n        return columns;\n    }\n    renderColumnsDropdown({ prefixCls, dropdownPrefixCls, columns, locale, getPopupContainer, }) {\n        const { sortOrder, filters } = this.state;\n        return treeMap(columns, (column, i) => {\n            const key = getColumnKey(column, i);\n            let filterDropdown;\n            let sortButton;\n            let onHeaderCell = column.onHeaderCell;\n            const isSortColumn = this.isSortColumn(column);\n            if ((column.filters && column.filters.length > 0) || column.filterDropdown) {\n                const colFilters = key in filters ? filters[key] : [];\n                filterDropdown = (<FilterDropdown locale={locale} column={column} selectedKeys={colFilters} confirmFilter={this.handleFilter} prefixCls={`${prefixCls}-filter`} dropdownPrefixCls={dropdownPrefixCls || 'ant-dropdown'} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)} key=\"filter-dropdown\"/>);\n            }\n            if (column.sorter) {\n                const sortDirections = column.sortDirections || this.props.sortDirections;\n                const isAscend = isSortColumn && sortOrder === 'ascend';\n                const isDescend = isSortColumn && sortOrder === 'descend';\n                const ascend = sortDirections.indexOf('ascend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-up ${isAscend ? 'on' : 'off'}`} type=\"caret-up\" theme=\"filled\"/>);\n                const descend = sortDirections.indexOf('descend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-down ${isDescend ? 'on' : 'off'}`} type=\"caret-down\" theme=\"filled\"/>);\n                sortButton = (<div title={locale.sortTitle} className={classNames(`${prefixCls}-column-sorter-inner`, ascend && descend && `${prefixCls}-column-sorter-inner-full`)} key=\"sorter\">\n            {ascend}\n            {descend}\n          </div>);\n                onHeaderCell = (col) => {\n                    let colProps = {};\n                    // Get original first\n                    if (column.onHeaderCell) {\n                        colProps = Object.assign({}, column.onHeaderCell(col));\n                    }\n                    // Add sorter logic\n                    const onHeaderCellClick = colProps.onClick;\n                    colProps.onClick = (...args) => {\n                        this.toggleSortOrder(column);\n                        if (onHeaderCellClick) {\n                            onHeaderCellClick(...args);\n                        }\n                    };\n                    return colProps;\n                };\n            }\n            return Object.assign(Object.assign({}, column), { className: classNames(column.className, {\n                    [`${prefixCls}-column-has-actions`]: sortButton || filterDropdown,\n                    [`${prefixCls}-column-has-filters`]: filterDropdown,\n                    [`${prefixCls}-column-has-sorters`]: sortButton,\n                    [`${prefixCls}-column-sort`]: isSortColumn && sortOrder,\n                }), title: [\n                    <span key=\"title\" className={`${prefixCls}-header-column`}>\n            <div className={sortButton ? `${prefixCls}-column-sorters` : undefined}>\n              <span className={`${prefixCls}-column-title`}>\n                {this.renderColumnTitle(column.title)}\n              </span>\n              <span className={`${prefixCls}-column-sorter`}>{sortButton}</span>\n            </div>\n          </span>,\n                    filterDropdown,\n                ], onHeaderCell });\n        });\n    }\n    renderColumnTitle(title) {\n        const { filters, sortOrder } = this.state;\n        // https://github.com/ant-design/ant-design/issues/11246#issuecomment-405009167\n        if (title instanceof Function) {\n            return title({\n                filters,\n                sortOrder,\n            });\n        }\n        return title;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nTable.propTypes = {\n    dataSource: PropTypes.array,\n    columns: PropTypes.array,\n    prefixCls: PropTypes.string,\n    useFixedHeader: PropTypes.bool,\n    rowSelection: PropTypes.object,\n    className: PropTypes.string,\n    size: PropTypes.string,\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    bordered: PropTypes.bool,\n    onChange: PropTypes.func,\n    locale: PropTypes.object,\n    dropdownPrefixCls: PropTypes.string,\n    sortDirections: PropTypes.array,\n    getPopupContainer: PropTypes.func,\n};\nTable.defaultProps = {\n    dataSource: [],\n    useFixedHeader: false,\n    className: '',\n    size: 'default',\n    loading: false,\n    bordered: false,\n    indentSize: 20,\n    locale: {},\n    rowKey: 'key',\n    showHeader: true,\n    sortDirections: ['ascend', 'descend'],\n    childrenColumnName: 'children',\n};\n"],"file":"Table.js"}