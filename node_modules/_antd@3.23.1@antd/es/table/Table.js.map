{"version":3,"sources":["table/Table.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","ReactDOM","omit","RcTable","INTERNAL_COL_DEFINE","PropTypes","classNames","shallowEqual","FilterDropdown","createStore","SelectionBox","SelectionCheckboxAll","Column","ColumnGroup","createBodyRow","flatArray","treeMap","flatFilter","normalizeColumns","Pagination","Icon","Spin","TransButton","LocaleReceiver","defaultLocale","ConfigConsumer","warning","noop","stopPropagation","nativeEvent","stopImmediatePropagation","getRowSelection","props","rowSelection","getColumnKey","column","index","key","dataIndex","isSameColumn","a","b","value","other","toString","defaultPagination","onChange","onShowSizeChange","emptyObject","Table","getCheckboxPropsByItem","item","getCheckboxProps","getRecordKey","CheckboxPropsCache","checkboxProps","record","rowKey","recordKey","undefined","onRow","prefixCls","custom","store","generatePopupContainerFunc","getPopupContainer","scroll","findDOMNode","handleFilter","nextFilters","pagination","state","filters","currentColumnKeys","columns","c","children","push","keys","forEach","columnKey","current","newState","filtersToSetState","getFilteredValueColumns","col","setState","selectionDirty","apply","prepareParamsArguments","handleSelect","rowIndex","checked","target","defaultSelection","getState","getDefaultSelection","selectedRowKeys","concat","pivot","rows","getFlatCurrentPageData","realIndex","expandedRowRender","findIndex","row","shiftKey","changeRowKeys","direction","Math","sign","dist","abs","step","disabled","includes","filter","j","setSelectedRowKeys","selectWay","handleRadioSelect","handleSelectRow","selectionKey","onSelectFunc","data","changeableRowKeys","map","splice","customSelectionStartIndex","hideDefaultSelections","handlePageChange","otherArguments","handleShowSizeChange","pageSize","nextPagination","renderExpandIcon","expandable","expanded","needIndentSpaced","onExpand","locale","event","collapse","expand","renderSelectionBox","type","_","handleChange","renderTable","renderEmpty","dropdownPrefixCls","contextLocale","contextGetPopupContainer","_a","showHeader","restTableProps","restProps","getCurrentPageData","expandIconAsCell","realGetPopupContainer","mergedLocale","emptyText","classString","size","bordered","columnsWithRowSelection","renderRowSelection","renderColumnsDropdown","newColumn","expandIconColumnIndex","components","renderComponent","getPrefixCls","customizePrefixCls","customizeDropdownPrefixCls","style","className","loading","spinning","table","paginationPatchClass","hasPagination","renderPagination","some","fixed","createComponents","getDefaultSortOrder","getFiltersFromColumns","getDefaultPagination","nextProps","previousState","newPagination","dataSource","getSortOrderColumns","sortState","getSortStateFromColumns","sortColumn","sortOrder","filteredValueColumns","filtersFromColumns","newFilters","isFiltersChanged","getFlatData","defaultChecked","defaultCurrent","defaultPageSize","filteredValue","colKey","definedSortState","defaultSortedColumn","defaultSortOrder","sortedColumn","total","floor","sorter","result","getLocalData","Number","MAX_VALUE","getMaxCurrent","childrenColumnName","currentState","slice","sorterFn","getSorterFn","recursiveSort","findColumn","values","onFilter","v","selectionInfo","selectedRows","onSelect","onSelectMultiple","changeRows","onSelectAll","onSelectInvert","sortDirections","newSortOrder","methodIndex","filtersChanged","order","field","extra","currentDataSource","myKey","prevComponents","bodyRow","body","preBodyRow","sort","paginationPosition","position","selectionColumnClass","selections","selectionColumn","render","width","columnWidth","title","columnTitle","checkboxAllDisabled","every","unshift","filterDropdown","sortButton","onHeaderCell","isSortColumn","colFilters","isAscend","isDescend","ascend","descend","sortTitle","colProps","onHeaderCellClick","onClick","toggleSortOrder","renderColumnTitle","Function","Component","propTypes","array","string","useFixedHeader","bool","object","oneOfType","func","defaultProps","indentSize"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable prefer-spread */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport omit from 'omit.js';\nimport RcTable, { INTERNAL_COL_DEFINE } from 'rc-table';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport FilterDropdown from './filterDropdown';\nimport createStore from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport createBodyRow from './createBodyRow';\nimport { flatArray, treeMap, flatFilter, normalizeColumns } from './util';\nimport Pagination from '../pagination';\nimport Icon from '../icon';\nimport Spin from '../spin';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nfunction noop() { }\nfunction stopPropagation(e) {\n    e.stopPropagation();\n    if (e.nativeEvent.stopImmediatePropagation) {\n        e.nativeEvent.stopImmediatePropagation();\n    }\n}\nfunction getRowSelection(props) {\n    return props.rowSelection || {};\n}\nfunction getColumnKey(column, index) {\n    return column.key || column.dataIndex || index;\n}\nfunction isSameColumn(a, b) {\n    if (a && b && a.key && a.key === b.key) {\n        return true;\n    }\n    return (a === b ||\n        shallowEqual(a, b, (value, other) => {\n            if (typeof value === 'function' && typeof other === 'function') {\n                return value === other || value.toString() === other.toString();\n            }\n        }));\n}\nconst defaultPagination = {\n    onChange: noop,\n    onShowSizeChange: noop,\n};\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\nconst emptyObject = {};\nexport default class Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getCheckboxPropsByItem = (item, index) => {\n            const rowSelection = getRowSelection(this.props);\n            if (!rowSelection.getCheckboxProps) {\n                return {};\n            }\n            const key = this.getRecordKey(item, index);\n            // Cache checkboxProps\n            if (!this.CheckboxPropsCache[key]) {\n                this.CheckboxPropsCache[key] = rowSelection.getCheckboxProps(item) || {};\n                const checkboxProps = this.CheckboxPropsCache[key];\n                warning(!('checked' in checkboxProps) && !('defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n            }\n            return this.CheckboxPropsCache[key];\n        };\n        this.getRecordKey = (record, index) => {\n            const { rowKey } = this.props;\n            const recordKey = typeof rowKey === 'function' ? rowKey(record, index) : record[rowKey];\n            warning(recordKey !== undefined, 'Table', 'Each record in dataSource of table should have a unique `key` prop, ' +\n                'or set `rowKey` of Table to an unique primary key, ' +\n                'see https://u.ant.design/table-row-key');\n            return recordKey === undefined ? index : recordKey;\n        };\n        this.onRow = (prefixCls, record, index) => {\n            const { onRow } = this.props;\n            const custom = onRow ? onRow(record, index) : {};\n            return Object.assign(Object.assign({}, custom), { prefixCls, store: this.store, rowKey: this.getRecordKey(record, index) });\n        };\n        this.generatePopupContainerFunc = (getPopupContainer) => {\n            const { scroll } = this.props;\n            if (getPopupContainer) {\n                return getPopupContainer;\n            }\n            // Use undefined to let rc component use default logic.\n            return scroll ? () => ReactDOM.findDOMNode(this) : undefined;\n        };\n        this.handleFilter = (column, nextFilters) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            const filters = Object.assign(Object.assign({}, this.state.filters), { [getColumnKey(column)]: nextFilters });\n            // Remove filters not in current columns\n            const currentColumnKeys = [];\n            treeMap(this.columns, c => {\n                if (!c.children) {\n                    currentColumnKeys.push(getColumnKey(c));\n                }\n            });\n            Object.keys(filters).forEach(columnKey => {\n                if (currentColumnKeys.indexOf(columnKey) < 0) {\n                    delete filters[columnKey];\n                }\n            });\n            if (props.pagination) {\n                // Reset current prop\n                pagination.current = 1;\n                pagination.onChange(pagination.current);\n            }\n            const newState = {\n                pagination,\n                filters: {},\n            };\n            const filtersToSetState = Object.assign({}, filters);\n            // Remove filters which is controlled\n            this.getFilteredValueColumns().forEach((col) => {\n                const columnKey = getColumnKey(col);\n                if (columnKey) {\n                    delete filtersToSetState[columnKey];\n                }\n            });\n            if (Object.keys(filtersToSetState).length > 0) {\n                newState.filters = filtersToSetState;\n            }\n            // Controlled current prop will not respond user interaction\n            if (typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState, () => {\n                this.store.setState({\n                    selectionDirty: false,\n                });\n                const { onChange } = this.props;\n                if (onChange) {\n                    onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, filters,\n                        pagination })));\n                }\n            });\n        };\n        this.handleSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            let selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            const key = this.getRecordKey(record, rowIndex);\n            const { pivot } = this.state;\n            const rows = this.getFlatCurrentPageData();\n            let realIndex = rowIndex;\n            if (this.props.expandedRowRender) {\n                realIndex = rows.findIndex(row => this.getRecordKey(row, rowIndex) === key);\n            }\n            if (nativeEvent.shiftKey && pivot !== undefined && realIndex !== pivot) {\n                const changeRowKeys = [];\n                const direction = Math.sign(pivot - realIndex);\n                const dist = Math.abs(pivot - realIndex);\n                let step = 0;\n                while (step <= dist) {\n                    const i = realIndex + step * direction;\n                    step += 1;\n                    const row = rows[i];\n                    const rowKey = this.getRecordKey(row, i);\n                    const checkboxProps = this.getCheckboxPropsByItem(row, i);\n                    if (!checkboxProps.disabled) {\n                        if (selectedRowKeys.includes(rowKey)) {\n                            if (!checked) {\n                                selectedRowKeys = selectedRowKeys.filter((j) => rowKey !== j);\n                                changeRowKeys.push(rowKey);\n                            }\n                        }\n                        else if (checked) {\n                            selectedRowKeys.push(rowKey);\n                            changeRowKeys.push(rowKey);\n                        }\n                    }\n                }\n                this.setState({ pivot: realIndex });\n                this.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelectMultiple',\n                    record,\n                    checked,\n                    changeRowKeys,\n                    nativeEvent,\n                });\n            }\n            else {\n                if (checked) {\n                    selectedRowKeys.push(this.getRecordKey(record, realIndex));\n                }\n                else {\n                    selectedRowKeys = selectedRowKeys.filter((i) => key !== i);\n                }\n                this.setState({ pivot: realIndex });\n                this.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelect',\n                    record,\n                    checked,\n                    changeRowKeys: undefined,\n                    nativeEvent,\n                });\n            }\n        };\n        this.handleRadioSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const key = this.getRecordKey(record, rowIndex);\n            const selectedRowKeys = [key];\n            this.store.setState({\n                selectionDirty: true,\n            });\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay: 'onSelect',\n                record,\n                checked,\n                changeRowKeys: undefined,\n                nativeEvent,\n            });\n        };\n        this.handleSelectRow = (selectionKey, index, onSelectFunc) => {\n            const data = this.getFlatCurrentPageData();\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            const selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            const changeableRowKeys = data\n                .filter((item, i) => !this.getCheckboxPropsByItem(item, i).disabled)\n                .map((item, i) => this.getRecordKey(item, i));\n            const changeRowKeys = [];\n            let selectWay = 'onSelectAll';\n            let checked;\n            // handle default selection\n            switch (selectionKey) {\n                case 'all':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = true;\n                    break;\n                case 'removeAll':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) >= 0) {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = false;\n                    break;\n                case 'invert':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                        }\n                        else {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                        }\n                        changeRowKeys.push(key);\n                        selectWay = 'onSelectInvert';\n                    });\n                    break;\n                default:\n                    break;\n            }\n            this.store.setState({\n                selectionDirty: true,\n            });\n            // when select custom selection, callback selections[n].onSelect\n            const { rowSelection } = this.props;\n            let customSelectionStartIndex = 2;\n            if (rowSelection && rowSelection.hideDefaultSelections) {\n                customSelectionStartIndex = 0;\n            }\n            if (index >= customSelectionStartIndex && typeof onSelectFunc === 'function') {\n                return onSelectFunc(changeableRowKeys);\n            }\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay,\n                checked,\n                changeRowKeys,\n            });\n        };\n        this.handlePageChange = (current, ...otherArguments) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            if (current) {\n                pagination.current = current;\n            }\n            else {\n                pagination.current = pagination.current || 1;\n            }\n            pagination.onChange(pagination.current, ...otherArguments);\n            const newState = {\n                pagination,\n            };\n            // Controlled current prop will not respond user interaction\n            if (props.pagination && typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState);\n            this.store.setState({\n                selectionDirty: false,\n            });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, pagination })));\n            }\n        };\n        this.handleShowSizeChange = (current, pageSize) => {\n            const { pagination } = this.state;\n            pagination.onShowSizeChange(current, pageSize);\n            const nextPagination = Object.assign(Object.assign({}, pagination), { pageSize,\n                current });\n            this.setState({ pagination: nextPagination });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { pagination: nextPagination })));\n            }\n        };\n        this.renderExpandIcon = (prefixCls) => ({ expandable, expanded, needIndentSpaced, record, onExpand, }) => {\n            if (expandable) {\n                return (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n          {(locale) => (<TransButton className={classNames(`${prefixCls}-row-expand-icon`, {\n                    [`${prefixCls}-row-collapsed`]: !expanded,\n                    [`${prefixCls}-row-expanded`]: expanded,\n                })} onClick={event => {\n                    onExpand(record, event);\n                }} aria-label={expanded ? locale.collapse : locale.expand} noStyle/>)}\n        </LocaleReceiver>);\n            }\n            if (needIndentSpaced) {\n                return <span className={`${prefixCls}-row-expand-icon ${prefixCls}-row-spaced`}/>;\n            }\n            return null;\n        };\n        this.renderSelectionBox = (type) => {\n            return (_, record, index) => {\n                const rowKey = this.getRecordKey(record, index);\n                const props = this.getCheckboxPropsByItem(record, index);\n                const handleChange = (e) => type === 'radio'\n                    ? this.handleRadioSelect(record, index, e)\n                    : this.handleSelect(record, index, e);\n                return (<span onClick={stopPropagation}>\n          <SelectionBox type={type} store={this.store} rowIndex={rowKey} onChange={handleChange} defaultSelection={this.getDefaultSelection()} {...props}/>\n        </span>);\n            };\n        };\n        this.renderTable = ({ prefixCls, renderEmpty, dropdownPrefixCls, contextLocale, getPopupContainer: contextGetPopupContainer, }) => {\n            const _a = this.props, { showHeader, locale, getPopupContainer } = _a, restTableProps = __rest(_a, [\"showHeader\", \"locale\", \"getPopupContainer\"]);\n            // do not pass prop.style to rc-table, since already apply it to container div\n            const restProps = omit(restTableProps, ['style']);\n            const data = this.getCurrentPageData();\n            const expandIconAsCell = this.props.expandedRowRender && this.props.expandIconAsCell !== false;\n            // use props.getPopupContainer first\n            const realGetPopupContainer = getPopupContainer || contextGetPopupContainer;\n            // Merge too locales\n            const mergedLocale = Object.assign(Object.assign({}, contextLocale), locale);\n            if (!locale || !locale.emptyText) {\n                mergedLocale.emptyText = renderEmpty('Table');\n            }\n            const classString = classNames({\n                [`${prefixCls}-${this.props.size}`]: true,\n                [`${prefixCls}-bordered`]: this.props.bordered,\n                [`${prefixCls}-empty`]: !data.length,\n                [`${prefixCls}-without-column-header`]: !showHeader,\n            });\n            const columnsWithRowSelection = this.renderRowSelection({\n                prefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            });\n            const columns = this.renderColumnsDropdown({\n                columns: columnsWithRowSelection,\n                prefixCls,\n                dropdownPrefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            }).map((column, i) => {\n                const newColumn = Object.assign({}, column);\n                newColumn.key = getColumnKey(newColumn, i);\n                return newColumn;\n            });\n            let expandIconColumnIndex = columns[0] && columns[0].key === 'selection-column' ? 1 : 0;\n            if ('expandIconColumnIndex' in restProps) {\n                expandIconColumnIndex = restProps.expandIconColumnIndex;\n            }\n            return (<RcTable key=\"table\" expandIcon={this.renderExpandIcon(prefixCls)} {...restProps} onRow={(record, index) => this.onRow(prefixCls, record, index)} components={this.components} prefixCls={prefixCls} data={data} columns={columns} showHeader={showHeader} className={classString} expandIconColumnIndex={expandIconColumnIndex} expandIconAsCell={expandIconAsCell} emptyText={mergedLocale.emptyText}/>);\n        };\n        this.renderComponent = ({ getPrefixCls, renderEmpty, getPopupContainer }) => {\n            const { prefixCls: customizePrefixCls, dropdownPrefixCls: customizeDropdownPrefixCls, style, className, } = this.props;\n            const data = this.getCurrentPageData();\n            let loading = this.props.loading;\n            if (typeof loading === 'boolean') {\n                loading = {\n                    spinning: loading,\n                };\n            }\n            const prefixCls = getPrefixCls('table', customizePrefixCls);\n            const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n            const table = (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n        {locale => this.renderTable({\n                prefixCls,\n                renderEmpty,\n                dropdownPrefixCls,\n                contextLocale: locale,\n                getPopupContainer,\n            })}\n      </LocaleReceiver>);\n            // if there is no pagination or no data,\n            // the height of spin should decrease by half of pagination\n            const paginationPatchClass = this.hasPagination() && data && data.length !== 0\n                ? `${prefixCls}-with-pagination`\n                : `${prefixCls}-without-pagination`;\n            return (<div className={classNames(`${prefixCls}-wrapper`, className)} style={style}>\n        <Spin {...loading} className={loading.spinning ? `${paginationPatchClass} ${prefixCls}-spin-holder` : ''}>\n          {this.renderPagination(prefixCls, 'top')}\n          {table}\n          {this.renderPagination(prefixCls, 'bottom')}\n        </Spin>\n      </div>);\n        };\n        const { expandedRowRender, columns = [] } = props;\n        warning(!('columnsPageRange' in props || 'columnsPageSize' in props), 'Table', '`columnsPageRange` and `columnsPageSize` are removed, please use ' +\n            'fixed columns instead, see: https://u.ant.design/fixed-columns.');\n        if (expandedRowRender && columns.some(({ fixed }) => !!fixed)) {\n            warning(false, 'Table', '`expandedRowRender` and `Column.fixed` are not compatible. Please use one of them at one time.');\n        }\n        this.columns = props.columns || normalizeColumns(props.children);\n        this.createComponents(props.components);\n        this.state = Object.assign(Object.assign({}, this.getDefaultSortOrder(this.columns)), { \n            // 减少状态\n            filters: this.getFiltersFromColumns(), pagination: this.getDefaultPagination(props), pivot: undefined });\n        this.CheckboxPropsCache = {};\n        this.store = createStore({\n            selectedRowKeys: getRowSelection(props).selectedRowKeys || [],\n            selectionDirty: false,\n        });\n    }\n    componentWillReceiveProps(nextProps) {\n        this.columns = nextProps.columns || normalizeColumns(nextProps.children);\n        if ('pagination' in nextProps || 'pagination' in this.props) {\n            this.setState(previousState => {\n                const newPagination = Object.assign(Object.assign(Object.assign({}, defaultPagination), previousState.pagination), nextProps.pagination);\n                newPagination.current = newPagination.current || 1;\n                newPagination.pageSize = newPagination.pageSize || 10;\n                return { pagination: nextProps.pagination !== false ? newPagination : emptyObject };\n            });\n        }\n        if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {\n            this.store.setState({\n                selectedRowKeys: nextProps.rowSelection.selectedRowKeys || [],\n            });\n        }\n        else if (this.props.rowSelection && !nextProps.rowSelection) {\n            this.store.setState({\n                selectedRowKeys: [],\n            });\n        }\n        if ('dataSource' in nextProps && nextProps.dataSource !== this.props.dataSource) {\n            this.store.setState({\n                selectionDirty: false,\n            });\n        }\n        // https://github.com/ant-design/ant-design/issues/10133\n        this.CheckboxPropsCache = {};\n        if (this.getSortOrderColumns(this.columns).length > 0) {\n            const sortState = this.getSortStateFromColumns(this.columns);\n            if (sortState.sortColumn !== this.state.sortColumn ||\n                sortState.sortOrder !== this.state.sortOrder) {\n                this.setState(sortState);\n            }\n        }\n        const filteredValueColumns = this.getFilteredValueColumns(this.columns);\n        if (filteredValueColumns.length > 0) {\n            const filtersFromColumns = this.getFiltersFromColumns(this.columns);\n            const newFilters = Object.assign({}, this.state.filters);\n            Object.keys(filtersFromColumns).forEach(key => {\n                newFilters[key] = filtersFromColumns[key];\n            });\n            if (this.isFiltersChanged(newFilters)) {\n                this.setState({ filters: newFilters });\n            }\n        }\n        this.createComponents(nextProps.components, this.props.components);\n    }\n    getDefaultSelection() {\n        const rowSelection = getRowSelection(this.props);\n        if (!rowSelection.getCheckboxProps) {\n            return [];\n        }\n        return this.getFlatData()\n            .filter((item, rowIndex) => this.getCheckboxPropsByItem(item, rowIndex).defaultChecked)\n            .map((record, rowIndex) => this.getRecordKey(record, rowIndex));\n    }\n    getDefaultPagination(props) {\n        const pagination = typeof props.pagination === 'object' ? props.pagination : {};\n        let current;\n        if ('current' in pagination) {\n            current = pagination.current;\n        }\n        else if ('defaultCurrent' in pagination) {\n            current = pagination.defaultCurrent;\n        }\n        let pageSize;\n        if ('pageSize' in pagination) {\n            pageSize = pagination.pageSize;\n        }\n        else if ('defaultPageSize' in pagination) {\n            pageSize = pagination.defaultPageSize;\n        }\n        return this.hasPagination(props)\n            ? Object.assign(Object.assign(Object.assign({}, defaultPagination), pagination), { current: current || 1, pageSize: pageSize || 10 }) : {};\n    }\n    getSortOrderColumns(columns) {\n        return flatFilter(columns || this.columns || [], (column) => 'sortOrder' in column);\n    }\n    getFilteredValueColumns(columns) {\n        return flatFilter(columns || this.columns || [], (column) => typeof column.filteredValue !== 'undefined');\n    }\n    getFiltersFromColumns(columns) {\n        const filters = {};\n        this.getFilteredValueColumns(columns).forEach((col) => {\n            const colKey = getColumnKey(col);\n            filters[colKey] = col.filteredValue;\n        });\n        return filters;\n    }\n    getDefaultSortOrder(columns) {\n        const definedSortState = this.getSortStateFromColumns(columns);\n        const defaultSortedColumn = flatFilter(columns || [], (column) => column.defaultSortOrder != null)[0];\n        if (defaultSortedColumn && !definedSortState.sortColumn) {\n            return {\n                sortColumn: defaultSortedColumn,\n                sortOrder: defaultSortedColumn.defaultSortOrder,\n            };\n        }\n        return definedSortState;\n    }\n    getSortStateFromColumns(columns) {\n        // return first column which sortOrder is not falsy\n        const sortedColumn = this.getSortOrderColumns(columns).filter((col) => col.sortOrder)[0];\n        if (sortedColumn) {\n            return {\n                sortColumn: sortedColumn,\n                sortOrder: sortedColumn.sortOrder,\n            };\n        }\n        return {\n            sortColumn: null,\n            sortOrder: null,\n        };\n    }\n    getMaxCurrent(total) {\n        const { pagination: { current, pageSize }, } = this.state;\n        if ((current - 1) * pageSize >= total) {\n            return Math.floor((total - 1) / pageSize) + 1;\n        }\n        return current;\n    }\n    getSorterFn(state) {\n        const { sortOrder, sortColumn } = state || this.state;\n        if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {\n            return;\n        }\n        return (a, b) => {\n            const result = sortColumn.sorter(a, b, sortOrder);\n            if (result !== 0) {\n                return sortOrder === 'descend' ? -result : result;\n            }\n            return 0;\n        };\n    }\n    getCurrentPageData() {\n        let data = this.getLocalData();\n        let current;\n        let pageSize;\n        const state = this.state;\n        // 如果没有分页的话，默认全部展示\n        if (!this.hasPagination()) {\n            pageSize = Number.MAX_VALUE;\n            current = 1;\n        }\n        else {\n            pageSize = state.pagination.pageSize;\n            current = this.getMaxCurrent(state.pagination.total || data.length);\n        }\n        // 分页\n        // ---\n        // 当数据量少于等于每页数量时，直接设置数据\n        // 否则进行读取分页数据\n        if (data.length > pageSize || pageSize === Number.MAX_VALUE) {\n            data = data.filter((_, i) => {\n                return i >= (current - 1) * pageSize && i < current * pageSize;\n            });\n        }\n        return data;\n    }\n    getFlatData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getLocalData(null, false), childrenColumnName);\n    }\n    getFlatCurrentPageData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getCurrentPageData(), childrenColumnName);\n    }\n    getLocalData(state, filter = true) {\n        const currentState = state || this.state;\n        const { dataSource } = this.props;\n        let data = dataSource || [];\n        // 优化本地排序\n        data = data.slice(0);\n        const sorterFn = this.getSorterFn(currentState);\n        if (sorterFn) {\n            data = this.recursiveSort(data, sorterFn);\n        }\n        // 筛选\n        if (filter && currentState.filters) {\n            Object.keys(currentState.filters).forEach(columnKey => {\n                const col = this.findColumn(columnKey);\n                if (!col) {\n                    return;\n                }\n                const values = currentState.filters[columnKey] || [];\n                if (values.length === 0) {\n                    return;\n                }\n                const onFilter = col.onFilter;\n                data = onFilter\n                    ? data.filter(record => {\n                        return values.some(v => onFilter(v, record));\n                    })\n                    : data;\n            });\n        }\n        return data;\n    }\n    setSelectedRowKeys(selectedRowKeys, selectionInfo) {\n        const { selectWay, record, checked, changeRowKeys, nativeEvent } = selectionInfo;\n        const rowSelection = getRowSelection(this.props);\n        if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n            this.store.setState({ selectedRowKeys });\n        }\n        const data = this.getFlatData();\n        if (!rowSelection.onChange && !rowSelection[selectWay]) {\n            return;\n        }\n        const selectedRows = data.filter((row, i) => selectedRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n        if (rowSelection.onChange) {\n            rowSelection.onChange(selectedRowKeys, selectedRows);\n        }\n        if (selectWay === 'onSelect' && rowSelection.onSelect) {\n            rowSelection.onSelect(record, checked, selectedRows, nativeEvent);\n        }\n        else if (selectWay === 'onSelectMultiple' && rowSelection.onSelectMultiple) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectMultiple(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectAll(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n            rowSelection.onSelectInvert(selectedRowKeys);\n        }\n    }\n    toggleSortOrder(column) {\n        if (!column.sorter) {\n            return;\n        }\n        const pagination = Object.assign({}, this.state.pagination);\n        const sortDirections = column.sortDirections || this.props.sortDirections;\n        const { sortOrder, sortColumn } = this.state;\n        // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n        let newSortOrder;\n        // 切换另一列时，丢弃 sortOrder 的状态\n        if (isSameColumn(sortColumn, column) && sortOrder !== undefined) {\n            // 按照sortDirections的内容依次切换排序状态\n            const methodIndex = sortDirections.indexOf(sortOrder) + 1;\n            newSortOrder =\n                methodIndex === sortDirections.length ? undefined : sortDirections[methodIndex];\n        }\n        else {\n            newSortOrder = sortDirections[0];\n        }\n        if (this.props.pagination) {\n            // Reset current prop\n            pagination.current = 1;\n            pagination.onChange(pagination.current);\n        }\n        const newState = {\n            pagination,\n            sortOrder: newSortOrder,\n            sortColumn: newSortOrder ? column : null,\n        };\n        // Controlled\n        if (this.getSortOrderColumns().length === 0) {\n            this.setState(newState);\n        }\n        const { onChange } = this.props;\n        if (onChange) {\n            onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), newState)));\n        }\n    }\n    hasPagination(props) {\n        return (props || this.props).pagination !== false;\n    }\n    isFiltersChanged(filters) {\n        let filtersChanged = false;\n        if (Object.keys(filters).length !== Object.keys(this.state.filters).length) {\n            filtersChanged = true;\n        }\n        else {\n            Object.keys(filters).forEach(columnKey => {\n                if (filters[columnKey] !== this.state.filters[columnKey]) {\n                    filtersChanged = true;\n                }\n            });\n        }\n        return filtersChanged;\n    }\n    isSortColumn(column) {\n        const { sortColumn } = this.state;\n        if (!column || !sortColumn) {\n            return false;\n        }\n        return getColumnKey(sortColumn) === getColumnKey(column);\n    }\n    // Get pagination, filters, sorter\n    prepareParamsArguments(state) {\n        const pagination = Object.assign({}, state.pagination);\n        // remove useless handle function in Table.onChange\n        delete pagination.onChange;\n        delete pagination.onShowSizeChange;\n        const filters = state.filters;\n        const sorter = {};\n        if (state.sortColumn && state.sortOrder) {\n            sorter.column = state.sortColumn;\n            sorter.order = state.sortOrder;\n            sorter.field = state.sortColumn.dataIndex;\n            sorter.columnKey = getColumnKey(state.sortColumn);\n        }\n        const extra = {\n            currentDataSource: this.getLocalData(state),\n        };\n        return [pagination, filters, sorter, extra];\n    }\n    findColumn(myKey) {\n        let column;\n        treeMap(this.columns, c => {\n            if (getColumnKey(c) === myKey) {\n                column = c;\n            }\n        });\n        return column;\n    }\n    createComponents(components = {}, prevComponents) {\n        const bodyRow = components && components.body && components.body.row;\n        const preBodyRow = prevComponents && prevComponents.body && prevComponents.body.row;\n        if (!this.row || bodyRow !== preBodyRow) {\n            this.row = createBodyRow(bodyRow);\n        }\n        this.components = Object.assign(Object.assign({}, components), { body: Object.assign(Object.assign({}, components.body), { row: this.row }) });\n    }\n    recursiveSort(data, sorterFn) {\n        const { childrenColumnName = 'children' } = this.props;\n        return data.sort(sorterFn).map((item) => item[childrenColumnName]\n            ? Object.assign(Object.assign({}, item), { [childrenColumnName]: this.recursiveSort(item[childrenColumnName], sorterFn) }) : item);\n    }\n    renderPagination(prefixCls, paginationPosition) {\n        // 强制不需要分页\n        if (!this.hasPagination()) {\n            return null;\n        }\n        let size = 'default';\n        const { pagination } = this.state;\n        if (pagination.size) {\n            size = pagination.size;\n        }\n        else if (this.props.size === 'middle' || this.props.size === 'small') {\n            size = 'small';\n        }\n        const position = pagination.position || 'bottom';\n        const total = pagination.total || this.getLocalData().length;\n        return total > 0 && (position === paginationPosition || position === 'both') ? (<Pagination key={`pagination-${paginationPosition}`} {...pagination} className={classNames(pagination.className, `${prefixCls}-pagination`)} onChange={this.handlePageChange} total={total} size={size} current={this.getMaxCurrent(total)} onShowSizeChange={this.handleShowSizeChange}/>) : null;\n    }\n    renderRowSelection({ prefixCls, locale, getPopupContainer, }) {\n        const { rowSelection } = this.props;\n        const columns = this.columns.concat();\n        if (rowSelection) {\n            const data = this.getFlatCurrentPageData().filter((item, index) => {\n                if (rowSelection.getCheckboxProps) {\n                    return !this.getCheckboxPropsByItem(item, index).disabled;\n                }\n                return true;\n            });\n            const selectionColumnClass = classNames(`${prefixCls}-selection-column`, {\n                [`${prefixCls}-selection-column-custom`]: rowSelection.selections,\n            });\n            const selectionColumn = {\n                key: 'selection-column',\n                render: this.renderSelectionBox(rowSelection.type),\n                className: selectionColumnClass,\n                fixed: rowSelection.fixed,\n                width: rowSelection.columnWidth,\n                title: rowSelection.columnTitle,\n                [INTERNAL_COL_DEFINE]: {\n                    className: `${prefixCls}-selection-col`,\n                },\n            };\n            if (rowSelection.type !== 'radio') {\n                const checkboxAllDisabled = data.every((item, index) => this.getCheckboxPropsByItem(item, index).disabled);\n                selectionColumn.title = selectionColumn.title || (<SelectionCheckboxAll store={this.store} locale={locale} data={data} getCheckboxPropsByItem={this.getCheckboxPropsByItem} getRecordKey={this.getRecordKey} disabled={checkboxAllDisabled} prefixCls={prefixCls} onSelect={this.handleSelectRow} selections={rowSelection.selections} hideDefaultSelections={rowSelection.hideDefaultSelections} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)}/>);\n            }\n            if ('fixed' in rowSelection) {\n                selectionColumn.fixed = rowSelection.fixed;\n            }\n            else if (columns.some(column => column.fixed === 'left' || column.fixed === true)) {\n                selectionColumn.fixed = 'left';\n            }\n            if (columns[0] && columns[0].key === 'selection-column') {\n                columns[0] = selectionColumn;\n            }\n            else {\n                columns.unshift(selectionColumn);\n            }\n        }\n        return columns;\n    }\n    renderColumnsDropdown({ prefixCls, dropdownPrefixCls, columns, locale, getPopupContainer, }) {\n        const { sortOrder, filters } = this.state;\n        return treeMap(columns, (column, i) => {\n            const key = getColumnKey(column, i);\n            let filterDropdown;\n            let sortButton;\n            let onHeaderCell = column.onHeaderCell;\n            const isSortColumn = this.isSortColumn(column);\n            if ((column.filters && column.filters.length > 0) || column.filterDropdown) {\n                const colFilters = key in filters ? filters[key] : [];\n                filterDropdown = (<FilterDropdown locale={locale} column={column} selectedKeys={colFilters} confirmFilter={this.handleFilter} prefixCls={`${prefixCls}-filter`} dropdownPrefixCls={dropdownPrefixCls || 'ant-dropdown'} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)} key=\"filter-dropdown\"/>);\n            }\n            if (column.sorter) {\n                const sortDirections = column.sortDirections || this.props.sortDirections;\n                const isAscend = isSortColumn && sortOrder === 'ascend';\n                const isDescend = isSortColumn && sortOrder === 'descend';\n                const ascend = sortDirections.indexOf('ascend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-up ${isAscend ? 'on' : 'off'}`} type=\"caret-up\" theme=\"filled\"/>);\n                const descend = sortDirections.indexOf('descend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-down ${isDescend ? 'on' : 'off'}`} type=\"caret-down\" theme=\"filled\"/>);\n                sortButton = (<div title={locale.sortTitle} className={classNames(`${prefixCls}-column-sorter-inner`, ascend && descend && `${prefixCls}-column-sorter-inner-full`)} key=\"sorter\">\n            {ascend}\n            {descend}\n          </div>);\n                onHeaderCell = (col) => {\n                    let colProps = {};\n                    // Get original first\n                    if (column.onHeaderCell) {\n                        colProps = Object.assign({}, column.onHeaderCell(col));\n                    }\n                    // Add sorter logic\n                    const onHeaderCellClick = colProps.onClick;\n                    colProps.onClick = (...args) => {\n                        this.toggleSortOrder(column);\n                        if (onHeaderCellClick) {\n                            onHeaderCellClick(...args);\n                        }\n                    };\n                    return colProps;\n                };\n            }\n            return Object.assign(Object.assign({}, column), { className: classNames(column.className, {\n                    [`${prefixCls}-column-has-actions`]: sortButton || filterDropdown,\n                    [`${prefixCls}-column-has-filters`]: filterDropdown,\n                    [`${prefixCls}-column-has-sorters`]: sortButton,\n                    [`${prefixCls}-column-sort`]: isSortColumn && sortOrder,\n                }), title: [\n                    <span key=\"title\" className={`${prefixCls}-header-column`}>\n            <div className={sortButton ? `${prefixCls}-column-sorters` : undefined}>\n              <span className={`${prefixCls}-column-title`}>\n                {this.renderColumnTitle(column.title)}\n              </span>\n              <span className={`${prefixCls}-column-sorter`}>{sortButton}</span>\n            </div>\n          </span>,\n                    filterDropdown,\n                ], onHeaderCell });\n        });\n    }\n    renderColumnTitle(title) {\n        const { filters, sortOrder } = this.state;\n        // https://github.com/ant-design/ant-design/issues/11246#issuecomment-405009167\n        if (title instanceof Function) {\n            return title({\n                filters,\n                sortOrder,\n            });\n        }\n        return title;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nTable.propTypes = {\n    dataSource: PropTypes.array,\n    columns: PropTypes.array,\n    prefixCls: PropTypes.string,\n    useFixedHeader: PropTypes.bool,\n    rowSelection: PropTypes.object,\n    className: PropTypes.string,\n    size: PropTypes.string,\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    bordered: PropTypes.bool,\n    onChange: PropTypes.func,\n    locale: PropTypes.object,\n    dropdownPrefixCls: PropTypes.string,\n    sortDirections: PropTypes.array,\n    getPopupContainer: PropTypes.func,\n};\nTable.defaultProps = {\n    dataSource: [],\n    useFixedHeader: false,\n    className: '',\n    size: 'default',\n    loading: false,\n    bordered: false,\n    indentSize: 20,\n    locale: {},\n    rowKey: 'key',\n    showHeader: true,\n    sortDirections: ['ascend', 'descend'],\n    childrenColumnName: 'children',\n};\n"],"file":"Table.js"}